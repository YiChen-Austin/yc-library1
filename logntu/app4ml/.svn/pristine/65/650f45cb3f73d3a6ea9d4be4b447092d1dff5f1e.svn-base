<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        ">
    <import resource="classpath:spring/spring-elasticsearch.xml"/>
	<!-- 开启注解配置,使Spring关注Annotation -->
	<context:annotation-config />
	<!-- 让Spring通过自动扫描来查询和管理Bean -->
	<context:component-scan
		base-package="com.mall.web.mall,com.mall.web.mobile,com.mall.web.pay,com.mall.web.admin,com.mall.web.sample">
	</context:component-scan>
	<mvc:annotation-driven />
	<!-- Hibernate4 -->
	<!-- 加载资源文件 其中包含变量信息，必须在Spring配置文件的最前面加载，即第一个加载 -->
	<context:property-placeholder location="classpath:db/jdbc-switch-test.properties" />
	<!-- 主数据源 -->
	<bean id="masterDataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${master.jdbc.driverClassName}" />
		<property name="url" value="${master.jdbc.url}" />
		<property name="username" value="${master.jdbc.username}" />
		<property name="password" value="${master.jdbc.password}" />
	</bean>
	<!-- 从数据源 -->
	<bean id="slaveDataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${slave.jdbc.driverClassName}" />
		<property name="url" value="${slave.jdbc.url}" />
		<property name="username" value="${slave.jdbc.username}" />
		<property name="password" value="${slave.jdbc.password}" />
	</bean>
	<bean id="dataSource" class="com.mall.web.common.dynamicds.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry key="master" value-ref="masterDataSource" />
				<entry key="slave" value-ref="slaveDataSource" />
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="slaveDataSource" />
	</bean>
	<!-- 数据库映射 -->
	<!--<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> 
		<property name="driverClassName" value="${jdbc.driver}" /> <property name="url" 
		value="${jdbc.url}" /> <property name="username" value="${jdbc.username}" 
		/> <property name="password" value="${jdbc.password}" /> </bean> -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mappingDirectoryLocations">
			<list>
				<value>classpath:com/mall/web/mall/domain</value>
			</list>
		</property>
		<property name="packagesToScan">
			<list>
				<!-- 可以加多个包 -->
				<value>com.mall.web.mall.domain</value>
				<value>com.mall.web.pay.domain</value>
			</list>
		</property>
		<property name="hibernateProperties" ref="hibernateProperties" />
	</bean>
	<bean name="hibernateProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}
				</prop>
				<prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}
				</prop>
				<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}
				</prop>
				<!-- <prop key="hibernate.cache.provider_configuration_file_resource_path">${hibernate.ehcache_config_file}</prop> -->
				<prop key="hibernate.query.factory_class">${hibernate.query.factory_class}
				</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory
				</prop>
			</props>
		</property>
	</bean>
	<!--切换数据源 -->
	<bean id="dataSourceAdvice" class="com.mall.web.common.dynamicds.DataSourceAdvice" />
	<aop:config>
		<aop:advisor pointcut="execution(* com.mall.web.mall..*Service.*(..))"
			advice-ref="dataSourceAdvice" />
	</aop:config>
	<!-- pointcut="execution(* com.mall.web.mall..*Service.@org.springframework.transaction.annotation.Transactional 
		public * *(..))" -->

	<!-- 配置Hibernate事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 配置事务异常封装 -->
	<bean id="persistenceExceptionTranslationPostProcessor"
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<!-- 事务注解配置 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 将OpenSessionInView 打开 -->
	<bean id="openSessionInView"
		class="org.springframework.orm.hibernate4.support.OpenSessionInViewInterceptor">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- 处理在类级别上的@RequestMapping注解 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<property name="interceptors">        <!-- 配置过滤器 -->
			<list>
				<ref bean="openSessionInView" />
			</list>
		</property>
	</bean>

	<!-- 声明式容器事务管理 ,transaction-manager指定事务管理器为transactionManager -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="create*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="set*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="*" read-only="true" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:advisor pointcut="execution(* com.mall..*Service.*(..))"
			advice-ref="txAdvice" />
	</aop:config>
	<!-- pointcut="execution(* com.mall..*Service.@org.springframework.transaction.annotation.Transactional 
		public * *(..))" -->


	<!-- 数据层用的模板工具，不是必须的 -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- 数据层用的模板工具，不是必须的 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>

</beans> 