package com.mall.web.mall.main.controller;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.log4j.Logger;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

import com.mall.common.exception.FrameworkException;
import com.mall.common.util.BaseUtil;
import com.mall.web.admin.common.utils.BaseAction;
import com.mall.web.mall.common.annotation.MemberAuth;
import com.mall.web.mall.common.utils.CkSessionUtils;
import com.mall.web.mall.member.service.WebMemberService;
import com.mall.web.mall.member.vo.WebMemberVo;

@Controller
@RequestMapping("/member/")
public class PersonMainController extends BaseAction{
	private static Logger logger = Logger.getLogger(PersonMainController.class);
	@Resource(name = "webMemberService")
	private WebMemberService webMemberService;
	/**
	 * 个人中心首页
	 * 
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("main")
	@MemberAuth(verifyLogin = true)
	public ModelAndView index(HttpServletRequest request,
			HttpServletResponse response, String service) {
		ModelAndView mav = new ModelAndView();
		mav.setViewName("person/main");
		return mav;
	}

	/**
	 * 个人中心（註冊）
	 * 
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("reg")
	@MemberAuth(verifyLogin = false)
	public ModelAndView reg(HttpServletRequest request,
			HttpServletResponse response, String service) {
		ModelAndView mav = new ModelAndView();
		mav.setViewName("person/register/reg");
		return mav;
	}
	
	/**
	 * 个人中心（登陆）
	 * 
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("login")
	@MemberAuth(verifyLogin = false)
	public ModelAndView login(HttpServletRequest request,
			HttpServletResponse response, WebMemberVo memberVo,String service) {
		ModelAndView mav = new ModelAndView();
		// 判断是否已经登录
		if (!BaseUtil.isEmpty(CkSessionUtils.getUser(request))) {
			if(!BaseUtil.isEmpty(service)){
				mav.setViewName("redirect:"+service);
				return mav;
			}
			mav.setViewName("redirect:/member/index");
			return mav;
		}
		// get方式提取数据
		if ("get".equalsIgnoreCase(request.getMethod())) {
			mav.setViewName("person/login/login");
			mav.addObject("service", service);
			return mav;
		}
		if (BaseUtil.isEmpty(memberVo)
				|| BaseUtil.isEmpty(memberVo.getUserName())
				|| BaseUtil.isEmpty(memberVo.getPassword())) {
			mav.setViewName("person/login/login");
			mav.addObject("service", service);
			return mav;
		}
		try {
			WebMemberVo user = webMemberService.getUserInfo(memberVo.getUserName());
			// 登录失败
			if (user == null) {
				mav.setViewName("person/login/login");
				mav.addObject("msg", "用户名或密码错误");
				return mav;
			}
			CkSessionUtils.setUser(request, user);
			webMemberService.updateLogin(user.getUserId(),getIpAddr(request));
			// 是否十天内自动登录
//			if ("1".equalsIgnoreCase(memberVo.getAutoLogin())) {
//				String tk = autoLoginService.saveAutoLogin(
//						Integer.toString(user.getId()), user.getUserName(),
//						request.getRemoteAddr());
//				CookieUtils.setCookie(request, response, "localhost",
//						CommonConstant.COOKIE_AUTH, tk, 15 * 24 * 60 * 60,
//						"UTF-8");
//				// mav.setViewName("redirect:/member/index");
//				// return mav;
//			}
		} catch (Exception e) {
			logger.warn(e);
			e.printStackTrace();
		}
		if (BaseUtil.isEmpty(service)) {
			service = "/member/index";
		}
		mav.setViewName("redirect:" + service);
		return mav;
	}
	/**
	 * 用户协议
	 * 
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("agreement")
	@MemberAuth(verifyLogin = false)
	public ModelAndView agreement(HttpServletRequest request,
			HttpServletResponse response) {
		ModelAndView mav = new ModelAndView();
		mav.setViewName("person/agreement/agreement");
		return mav;
	}
	/**
	 * 判断用户是否登陆过，如果已登陆则直接到主页面，未登陆则进入登陆界面
	 * 
	 * @return
	 * @throws FrameworkException
	 * @throws Exception
	 */
	@RequestMapping(value = { "/index", "/index/*", "/index/*/*" })
	@MemberAuth(verifyLogin = false)
	public ModelAndView index(HttpServletRequest request, HttpServletResponse response) {
		ModelAndView mav = new ModelAndView();
		//用户登陆信息
		WebMemberVo user = CkSessionUtils.getUser(request);	
		//判断用户是否登陆,登陆则跳转主页面
		if(!BaseUtil.isEmpty(user)){
			mav.setViewName("redirect:/main");
		}
		//如果未登陆，则跳转登陆页面
		else{
			mav.setViewName("person/login/login");
		}
		return mav;
	}
}
